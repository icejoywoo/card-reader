Windows Socket  错误码 (定义在winsock2.h中)
/*
 * All Windows Sockets error constants are biased by WSABASEERR from
 * the "normal"
 */
#define WSABASEERR              10000
/*
 * Windows Sockets definitions of regular Microsoft C error constants
 */
#define WSAEINTR                (WSABASEERR+4)
#define WSAEBADF                (WSABASEERR+9)
#define WSAEACCES               (WSABASEERR+13)
#define WSAEFAULT               (WSABASEERR+14)
#define WSAEINVAL               (WSABASEERR+22)
#define WSAEMFILE               (WSABASEERR+24)

/*
 * Windows Sockets definitions of regular Berkeley error constants
 */
#define WSAEWOULDBLOCK          (WSABASEERR+35)
#define WSAEINPROGRESS          (WSABASEERR+36)
#define WSAEALREADY             (WSABASEERR+37)
#define WSAENOTSOCK             (WSABASEERR+38)
#define WSAEDESTADDRREQ         (WSABASEERR+39)
#define WSAEMSGSIZE             (WSABASEERR+40)
#define WSAEPROTOTYPE           (WSABASEERR+41)
#define WSAENOPROTOOPT          (WSABASEERR+42)
#define WSAEPROTONOSUPPORT      (WSABASEERR+43)
#define WSAESOCKTNOSUPPORT      (WSABASEERR+44)
#define WSAEOPNOTSUPP           (WSABASEERR+45)
#define WSAEPFNOSUPPORT         (WSABASEERR+46)
#define WSAEAFNOSUPPORT         (WSABASEERR+47)
#define WSAEADDRINUSE           (WSABASEERR+48)
#define WSAEADDRNOTAVAIL        (WSABASEERR+49)
#define WSAENETDOWN             (WSABASEERR+50)
#define WSAENETUNREACH          (WSABASEERR+51)
#define WSAENETRESET            (WSABASEERR+52)
#define WSAECONNABORTED         (WSABASEERR+53)
#define WSAECONNRESET           (WSABASEERR+54)
#define WSAENOBUFS              (WSABASEERR+55)
#define WSAEISCONN              (WSABASEERR+56)
#define WSAENOTCONN             (WSABASEERR+57)
#define WSAESHUTDOWN            (WSABASEERR+58)
#define WSAETOOMANYREFS         (WSABASEERR+59)
#define WSAETIMEDOUT            (WSABASEERR+60)
#define WSAECONNREFUSED         (WSABASEERR+61)
#define WSAELOOP                (WSABASEERR+62)
#define WSAENAMETOOLONG         (WSABASEERR+63)
#define WSAEHOSTDOWN            (WSABASEERR+64)
#define WSAEHOSTUNREACH         (WSABASEERR+65)
#define WSAENOTEMPTY            (WSABASEERR+66)
#define WSAEPROCLIM             (WSABASEERR+67)
#define WSAEUSERS               (WSABASEERR+68)
#define WSAEDQUOT               (WSABASEERR+69)
#define WSAESTALE               (WSABASEERR+70)
#define WSAEREMOTE              (WSABASEERR+71)

/*
 * Extended Windows Sockets error constant definitions
 */
#define WSASYSNOTREADY          (WSABASEERR+91)
#define WSAVERNOTSUPPORTED      (WSABASEERR+92)
#define WSANOTINITIALISED       (WSABASEERR+93)
#define WSAEDISCON              (WSABASEERR+101)
#define WSAENOMORE              (WSABASEERR+102)
#define WSAECANCELLED           (WSABASEERR+103)
#define WSAEINVALIDPROCTABLE    (WSABASEERR+104)
#define WSAEINVALIDPROVIDER     (WSABASEERR+105)
#define WSAEPROVIDERFAILEDINIT  (WSABASEERR+106)
#define WSASYSCALLFAILURE       (WSABASEERR+107)
#define WSASERVICE_NOT_FOUND    (WSABASEERR+108)
#define WSATYPE_NOT_FOUND       (WSABASEERR+109)
#define WSA_E_NO_MORE           (WSABASEERR+110)
#define WSA_E_CANCELLED         (WSABASEERR+111)
#define WSAEREFUSED             (WSABASEERR+112)
/*
 * Error return codes from gethostbyname() and gethostbyaddr()
 * (when using the resolver). Note that these errors are
 * retrieved via WSAGetLastError() and must therefore follow
 * the rules for avoiding clashes with error numbers from
 * specific implementations or language run-time systems.
 * For this reason the codes are based at WSABASEERR+1001.
 * Note also that [WSA]NO_ADDRESS is defined only for
 * compatibility purposes.
 */

#define h_errno         WSAGetLastError()

/* Authoritative Answer: Host not found */
#define WSAHOST_NOT_FOUND       (WSABASEERR+1001)
#define HOST_NOT_FOUND          WSAHOST_NOT_FOUND

/* Non-Authoritative: Host not found, or SERVERFAIL */
#define WSATRY_AGAIN            (WSABASEERR+1002)
#define TRY_AGAIN               WSATRY_AGAIN

/* Non-recoverable errors, FORMERR, REFUSED, NOTIMP */
#define WSANO_RECOVERY          (WSABASEERR+1003)
#define NO_RECOVERY             WSANO_RECOVERY

/* Valid name, no data record of requested type */
#define WSANO_DATA              (WSABASEERR+1004)
#define NO_DATA                 WSANO_DATA

/* no address, look for MX record */
#define WSANO_ADDRESS           WSANO_DATA
#define NO_ADDRESS              WSANO_ADDRESS

/*
 * Define QOS related error return codes
 *
 */
#define  WSA_QOS_RECEIVERS               (WSABASEERR + 1005)
         /* at least one Reserve has arrived */
#define  WSA_QOS_SENDERS                 (WSABASEERR + 1006)
         /* at least one Path has arrived */
#define  WSA_QOS_NO_SENDERS              (WSABASEERR + 1007)  
         /* there are no senders */
#define  WSA_QOS_NO_RECEIVERS            (WSABASEERR + 1008) 
         /* there are no receivers */
#define  WSA_QOS_REQUEST_CONFIRMED       (WSABASEERR + 1009)
         /* Reserve has been confirmed */
#define  WSA_QOS_ADMISSION_FAILURE       (WSABASEERR + 1010)
         /* error due to lack of resources */
#define  WSA_QOS_POLICY_FAILURE          (WSABASEERR + 1011)
         /* rejected for administrative reasons - bad credentials */
#define  WSA_QOS_BAD_STYLE               (WSABASEERR + 1012)
         /* unknown or conflicting style */
#define  WSA_QOS_BAD_OBJECT              (WSABASEERR + 1013)
         /* problem with some part of the filterspec or providerspecific
          * buffer in general */
#define  WSA_QOS_TRAFFIC_CTRL_ERROR      (WSABASEERR + 1014)
         /* problem with some part of the flowspec */
#define  WSA_QOS_GENERIC_ERROR           (WSABASEERR + 1015) 
         /* general error */
###########################################################################
常见错误说明:
WSAEINVAL (10022)：无效自变量。它也可以表示套接字的当前状态与要调用的 TCP 函数不兼容，或套接字可能不再有效。 
WSAEMFILE (10024)：打开的文件太多。打开的套接字太多。每个实现可以有一个全局、每进程或每线程可用的套接字句柄的最大数目。 
WSAEWOULDBLOCK (10035)：资源暂时不可用。从在非分块的套接字上不能立即完成的操作返回此错误。 
WSAEINPROGRESS (10036)：正在进行分块“Windows 套接字”操作。“Windows 套接字”仅允许每个任务（或线程）有单个分块操作未完成，并且如果进行任何其它函数调用，则函数由于 WSAEINPROGRESS 而失败。 
WSAENOPROTOOPT (10042)：错误协议选项。在 getsockopt() 或 setsockopt() 调用中指定了未知、无效或不受支持的选项或级别。 
WSAEADDRINUSE (10048)：地址已经在使用。通常仅允许每个套接字地址（协议／IP 地址／端口）的一种使用。如果应用程序试图将套接字 bind() 至 IP 地址／端口，而该 IP 地址／端口已经用于现有套接字、未正确关闭的套接字或仍处于关闭进程中的套接字，则发生此错误。 
WSAENETDOWN (10050)：网络已停止。套接字操作遇到了失效网络。这可能指示网络系统（即，WinSock DLL 溢出的协议堆栈）、网络接口或本地网络本身的严重故障。 
WSAENETUNREACH (10051)：网络不可到达。试图对不可到达的网络执行套接字操作。这通常表示本地软件知道没有到达远程主机的路由。 
WSAENETRESET (10052)：网络复位时删除了连接。由于该操作正在进行时“保持活动”活动检测到故障，已中断连接。如果试图在已经失败的连接中设置 SO_KEEPALIVE，则也可能是由 stsockopt() 返回的。 
WSAECONNABORTED (10053)：软件导致了连接异常终止。可能由于数据传送超时或协议错误，机器上的软件异常终止了已建立的连接， 
WSAECONNRESET (10054)：连接由对等设备复位。远程对等设备强制关闭了现有连接。如果远程机器上的对等应用程序突然停止，机器重新引导，或对等应用程序在远程套接字中使用了“硬关闭”，则通常会导致此结果。如果由于一个或多个操作正在进行时“保持活动”活动检测到故障而中断连接，则也可能导致此错误。正在进行的操作由于 WSAENETRESET 而失败。后续操作由于 WSAECONNRESET 而失败。 
WSAENOBUFS (10055)：没有可用缓冲区空间。因为系统缺乏足够缓冲区空间或由于队列已满，所以可能无法执行套接字上的操作。 
WSAENOTCONN (10057)：未连接套接字。 
WSAETIMEDOUT (10060)：连接超时。因为在一段时间后连接的一方未正确响应，所以连接尝试失败。 
WSAECONNREFUSED (10061)：连接已被拒绝。如果正在尝试连接至实例或连接至数据库，则检查是否已成功启动服务器上的数据库管理器和 TCP/IP 协议支持。 
WSAEHOSTUNREACH (10065)：没有至主机的路由。试图对不可到达的机器执行套接字操作。 
WSASYSNOTREADY (10091)：基础网络子系统未准备好进行网络通信。用户应该检查相应的“Windows 套接字 DLL”是否位于当前路径中，并检查它们是否未尝试同时使用多个 WinSock 实现。如果在您的系统上存在多个 WinSock DLL，则确保路径中的第一个 WinSock DLL 适合于当前已装入的网络子系统，并确保当前已安装并已正确配置所有必要的组件。 
WSAVERNOTSUPPORTED (10092)：此特定的“Windows 套接字”实现未提供请求的“Windows 套接字 API”支持的版本。检查是否未访问旧的“Windows 套接字 DLL”文件。 
WSA_E_NO_MORE (10110), WSAENOMORE (10102)：没有可用数据。在“Windows 套接字”版本 2 中，为 WSAENOMORE 和 WSA_E_NO_MORE 定义了冲突的错误代码。在以后版本中将除去错误代码 WSAENOMORE，只有 WSA_E_NO_MORE 将保留。 
WSAHOST_NOT_FOUND (11001)：找不到主机。 
WSATRY_AGAIN (11002)：找不到主机。因为本地机器未接收到来自名称服务器的响应，所以请求从名称服务器中检索主机名的 IP 地址失败。 
WSANO_DATA (11004)：名称无效，没有请求的类型的数据记录。名称服务器或 hosts 文件不识别主机名，或者在 services 文件中未指定服务名。
